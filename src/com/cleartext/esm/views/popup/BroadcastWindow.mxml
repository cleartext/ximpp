<?xml version="1.0" encoding="utf-8"?>
<popup:PopupWindowBase
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:popup="com.cleartext.esm.views.popup.*"
	title="Post To..."
	submitButtonLabel="Post"
	isValid="true">
	
	<fx:Script>
		<![CDATA[
			import com.cleartext.esm.events.InputTextEvent;
			import com.cleartext.esm.models.ApplicationModel;
			import com.cleartext.esm.models.BuddyModel;
			import com.cleartext.esm.models.DatabaseModel;
			import com.cleartext.esm.models.SettingsModel;
			import com.cleartext.esm.models.XMPPModel;
			import com.cleartext.esm.models.types.SubscriptionTypes;
			import com.cleartext.esm.models.valueObjects.Buddy;
			import com.cleartext.esm.models.valueObjects.IBuddy;
			import com.cleartext.esm.models.valueObjects.Message;
			
			import flash.sampler.NewObjectSample;
			
			import mx.collections.ArrayCollection;
			import mx.controls.CheckBox;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			
			import org.swizframework.Swiz;

			[Autowire]
			[Bindable]
			public var appModel:ApplicationModel;
			
			[Autowire]
			[Bindable]
			public var buddies:BuddyModel;
			
			public var message:String;
			
			private var _group:IBuddy;
			public function set group(value:IBuddy):void
			{
				_group = value;
				list.dataProvider = new ArrayCollection(buddies.getBuddiesByGroup(_group.jid));
			}
			
			override protected function submit(event:Event):void
			{
				if(_group != Buddy.ALL_MICRO_BLOGGING_BUDDY)
				{
					var msg:Message = new Message();
					msg.sender = appModel.settings.userAccount.jid;
					msg.recipient = _group.jid;
					msg.type = "chat";
					msg.plainMessage = msg.displayMessage = message;
					var date:Date = new Date();
					msg.sentTimestamp = date;
					msg.receivedTimestamp = date;
					
					appModel.chats.addMessage(_group, msg);
					appModel.database.saveMessage(msg);
				}
				
				for each(var buddy:Buddy in list.dataProvider)
				{
					if(buddy.sendTo)
					{
						appModel.log("calling [ApplicationModel].sendMessage()");
						appModel.sendMessageTo(buddy, message, _group == Buddy.ALL_MICRO_BLOGGING_BUDDY);
					}
				}

				closeWindow();
			}
			
			override protected function cancelHandler(event:Event):void
			{
				super.cancelHandler(event);
				Swiz.dispatchEvent(new InputTextEvent(InputTextEvent.INSERT_TEXT, message));
			}
			
		]]>
	</fx:Script>
	
	<mx:Text text="Send to the following services:" selectable="false"/>
	<s:List id="list" width="250" height="380"
			alternatingItemColors="[#f3f3f3, #ffffff]">
		<s:itemRenderer>
			<fx:Component>
				<s:ItemRenderer>
					<s:layout>
						<s:HorizontalLayout verticalAlign="middle" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5" />
					</s:layout>
					<s:CheckBox selected="{data.sendTo}" click="data.sendTo = !data.sendTo"/>
					<s:Label text="{data.nickname}" />
				</s:ItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
	
	<popup:controlBarContent />
	
</popup:PopupWindowBase>
