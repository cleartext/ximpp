<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas
	width="100%" height="100%"
	initialize="init();"
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:header="com.cleartext.ximpp.views.header.*"
	xmlns:buddies="com.cleartext.ximpp.views.buddies.*" 
	xmlns:messages="com.cleartext.ximpp.views.messages.*">

	<mx:Script>
		<![CDATA[
			import com.cleartext.ximpp.views.popup.EditGroupWindow;
			import com.cleartext.ximpp.views.popup.RemoveGroupWindow;
			import mx.events.FlexEvent;
			import com.cleartext.ximpp.views.popup.RemoveBuddyWindow;
			import com.cleartext.ximpp.models.XMPPModel;
			import com.cleartext.ximpp.events.SendButtonEvent;
			import org.swizframework.Swiz;
			import com.cleartext.ximpp.models.BuddyModel;
			import com.cleartext.ximpp.models.Constants;
			import com.cleartext.ximpp.views.popup.PreferenceWindow;
			import mx.core.IFlexDisplayObject;
			import com.cleartext.ximpp.views.popup.EditBuddyWindow;
			import com.cleartext.ximpp.views.popup.SubscriptionRequestWindow;
			import com.cleartext.ximpp.events.PopUpEvent;
			import com.cleartext.ximpp.views.popup.AddBuddyGroupGatewayWindow;
			import com.cleartext.ximpp.models.ApplicationModel;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			import mx.controls.Alert;
			
			import mx.core.mx_internal;

			[Autowire]
			[Bindable]
			public var appModel:ApplicationModel;		
		
			[Autowire]
			[Bindable]
			public var buddies:BuddyModel;
			
			[Autowire(bean="xmpp", property="connected")]
			[Bindable]
			public var xmppConnected:Boolean;
		
			private function init():void
			{
				appModel.init();
			}
					
			[Mediate(event="PopUpEvent.PREFERENCES_WINDOW")]
			public function showPreferencesWindow(event:PopUpEvent):void
			{
				initializePopUp(new PreferenceWindow());
			}
			
			[Mediate(event="PopUpEvent.ADVANCED_SEARCH_WINDOW")]
			public function showAdvancedSearchWindow(event:PopUpEvent):void
			{
				Alert.show("Advanced search is not currently implemented.","Advanced Search");
			}
			
			[Mediate(event="PopUpEvent.ADD_WINDOW")]
			public function showAddBuddyWindow(event:PopUpEvent):void
			{
				initializePopUp(new AddBuddyGroupGatewayWindow());
			}

			[Mediate(event="PopUpEvent.DELETE_BUDDY_WINDOW")]
			public function showRemoveBuddyWindow(event:PopUpEvent):void
			{
				var window:RemoveBuddyWindow = new RemoveBuddyWindow();
				window.buddy = event.buddy;
				initializePopUp(window);
			}

			[Mediate(event="PopUpEvent.DELETE_GROUP_WINDOW")]
			public function showRemoveGroupWindow(event:PopUpEvent):void
			{
				var window:RemoveGroupWindow = new RemoveGroupWindow();
				window.groupName = event.dataString;
				initializePopUp(window);
			}

			[Mediate(event="PopUpEvent.EDIT_GROUP_WINDOW")]
			public function showEditGroupWindow(event:PopUpEvent):void
			{
				var window:EditGroupWindow = new EditGroupWindow();
				window.groupName = event.dataString;
				initializePopUp(window);
			}

			[Mediate(event="PopUpEvent.SUBSCRIPTION_REQUEST_WINDOW")]
			public function showSubscriptionRequest(event:PopUpEvent):void
			{
				var buddyExists:Boolean = buddies.containsJid(event.dataString);

				var window:SubscriptionRequestWindow = new SubscriptionRequestWindow();
				window.fromJid = event.dataString;
				window.addToRoster = !buddyExists;
				initializePopUp(window);
			}

			[Mediate(event="PopUpEvent.EDIT_BUDDY_WINDOW")]
			public function showEditBuddyWindow(event:PopUpEvent):void
			{
				var window:EditBuddyWindow = new EditBuddyWindow();
				initializePopUp(window);
				window.buddy = event.buddy;
			}
			
			private function initializePopUp(window:IFlexDisplayObject):void
			{
				window.addEventListener(CloseEvent.CLOSE, 
					function():void
					{
						PopUpManager.removePopUp(window);
					});
				PopUpManager.addPopUp(window, this, true);
				PopUpManager.centerPopUp(window);
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				var g:Graphics = graphics;
				g.clear();
	
				g.beginFill(0x000000);
				g.drawRect(0, 0, unscaledWidth, unscaledHeight);
	
				var matrix:Matrix = new Matrix();

				var w:Number = unscaledWidth/2 - 50;
				var r:Number = Math.tan(Math.atan(w/50) - Math.atan(50/w)) * w;
				matrix.createGradientBox(unscaledWidth, 50, Math.PI/2, 0, Constants.TOP_BAR_HEIGHT + headerCanvas.height + 10);
				g.beginGradientFill(GradientType.LINEAR, [0x000000, 0x3e443f], [0.8, 0.8], [0, 255], matrix);
				g.drawCircle(unscaledWidth/2, Constants.TOP_BAR_HEIGHT+headerCanvas.height+5-r, r+50);

				matrix.createGradientBox(50, unscaledHeight);
				g.beginGradientFill(GradientType.LINEAR, [0x3e443f, 0x000000], [1.0, 1.0], [0, 255], matrix);
				g.drawRect(0, 0, 50, unscaledHeight);
				
				matrix.createGradientBox(50, unscaledHeight, Math.PI, unscaledWidth-50);
				g.beginGradientFill(GradientType.LINEAR, [0x3e443f, 0x000000], [1.0, 1.0], [0, 255], matrix);
				g.drawRect(unscaledWidth-50, 0, 50, unscaledHeight);
			}

		]]>
	</mx:Script>
	
	<header:HeaderCanvas id="headerCanvas"/>
	<mx:VDividedBox 
		top="{headerCanvas.height}" 
		bottom="0" 
		right="50" left="50" >
		<mx:HDividedBox height="70%" width="100%" >
			<buddies:BuddyCanvas
				backgroundColor="0xffffff"
				id="buddyCanvas"
				width="25%"/>
			<messages:MessageCanvas
				id="chatCanvas"
				width="75%"/>
		</mx:HDividedBox>
		<mx:TextArea
			id="console"
			backgroundColor="0xffffff"
			width="100%" height="200"
			text="{appModel.logText}"
			editable="false"
			updateComplete="console.verticalScrollPosition = console.maxVerticalScrollPosition"
			verticalScrollPolicy="on"
			includeInLayout="{appModel.showConsole}"
			visible="{appModel.showConsole}"
			/>
	</mx:VDividedBox>

	<mx:Button
		upIcon="{Constants.SendUp}"
		overIcon="{Constants.SendDown}"
		downIcon="{Constants.SendUp}"
		disabledIcon="{Constants.SendDisabled}"
		toolTip="send message"
		enabled="{xmppConnected}"
		right="10" y="{30 + headerCanvas.height}"
		width="50" height="50"
		click="Swiz.dispatchEvent(new SendButtonEvent(SendButtonEvent.SEND_CLICKED));"/>

	<buddies:GroupSelectors
		x="9" y="{headerCanvas.height + Constants.TOP_BAR_HEIGHT + Constants.AVATAR_TAB_HEIGHT}" />
	
	<messages:MicroBloggingSelectors
		visible="false"
		x="{width-41}" y="{headerCanvas.height + Constants.TOP_BAR_HEIGHT + Constants.AVATAR_TAB_HEIGHT}" />
	
</mx:Canvas>
