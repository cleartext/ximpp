<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	creationComplete="groupListChanged(null)"
	xmlns:common="com.cleartext.ximpp.views.common.*"
	width="100%"
	height="100%">
	<mx:Script>
		<![CDATA[
			import com.cleartext.ximpp.models.Constants;
			import com.cleartext.ximpp.events.PopUpEvent;
			import org.swizframework.Swiz;
			import com.cleartext.ximpp.views.common.SideButton;
			import mx.controls.Button;
			import com.cleartext.ximpp.events.BuddyModelEvent;
			import com.cleartext.ximpp.models.BuddyModel;
			
			[Autowire]
			[Bindable]
			public var buddies:BuddyModel;
			
			public var groupButtons:Dictionary = new Dictionary();
			
			[Mediate (event="BuddyModelEvent.GROUPS_CHANGED")]
			public function groupListChanged(event:BuddyModelEvent):void
			{
				var button:SideButton;
				
				for each(button in groupButtons)
				{
					button.visible = button.includeInLayout = false;
				}
				
				for each(var group:String in buddies.groups)
				{
					button = groupButtons[group] as SideButton;
					
					if(!button)
					{
						button = new SideButton();
						groupButtons[group] = button;
						button.text = group;
						button.icon = Constants.DefaultGroupIcon;
						button.addEventListener(MouseEvent.CLICK, clickHandler);
						addChildAt(button, numChildren-1);
					}
					else
					{
						button.visible = button.includeInLayout = true;
					}
				}

				for each(button in groupButtons)
				{
					if(!button.visible)
					{
						removeChild(button);
						delete groupButtons[button.text];
					}
				}
			}
			
			private function clickHandler(event:MouseEvent):void
			{
				buddies.groupName = event.target.text;
				invalidateProperties();
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				for each(var sb:SideButton in getChildren())
					sb.selected = sb.text==buddies.groupName;
			}

		]]>
	</mx:Script>
	
	<common:SideButton text="{BuddyModel.ALL_BUDDIES_GROUP}" click="clickHandler(event)" icon="{Constants.AllBuddies}"/>
	<common:SideButton text="{BuddyModel.GATEWAY_GROUP}" click="clickHandler(event)" icon="{Constants.Gateways}"/>
	<common:SideButton text="{BuddyModel.UNASIGNED}" click="clickHandler(event)" icon="{Constants.NoGroup}"/>
	
	<common:SideButton text="Add Buddy/Group/Gateway"
		click="Swiz.dispatchEvent(new PopUpEvent(PopUpEvent.ADD_NEW_BUDDY_WINDOW))"
		icon="{Constants.Add}" forceWhiteBackground="true"/>
</mx:VBox>
