<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	clipContent="false"
	creationComplete="init()"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:buddies="com.cleartext.ximpp.views.buddies.*"
	width="100%" height="100%"
	xmlns:common="com.cleartext.ximpp.views.common.*" 
	verticalGap="0" 
	xmlns:list="com.universalsprout.flex.components.list.*"
	>
	<mx:Script>
		<![CDATA[
			import com.cleartext.ximpp.models.valueObjects.BuddySortTypes;
			import com.cleartext.ximpp.models.BuddyModel;
			import com.cleartext.ximpp.events.UserAccountEvent;
			import de.polygonal.ds.NullIterator;
			import com.cleartext.ximpp.models.SettingsModel;
			import com.cleartext.ximpp.models.Constants;
			import com.cleartext.ximpp.models.valueObjects.Status;
			import com.cleartext.ximpp.events.PopUpEvent;
			import org.swizframework.Swiz;
			import mx.controls.Alert;
			import com.cleartext.ximpp.models.valueObjects.Buddy;
			import com.universalsprout.flex.components.list.SproutListEvent;
			import com.hurlant.crypto.symmetric.NullPad;
			import com.cleartext.ximpp.models.ApplicationModel;
			
			[Autowire]
			[Bindable]
			public var appModel:ApplicationModel;
			
			[Autowire]
			[Bindable]
			public var settings:SettingsModel;
			
			[Autowire]
			[Bindable]
			public var buddies:BuddyModel;
			
			[Embed (source="/com/cleartext/ximpp/assets/timeUp.png")]
			[Bindable]
			public var TimeUp:Class;
			
			[Embed (source="/com/cleartext/ximpp/assets/timeSelected.png")]
			[Bindable]
			public var TimeSelected:Class;
			
			[Embed (source="/com/cleartext/ximpp/assets/abcUp.png")]
			[Bindable]
			public var AbcUp:Class;
			
			[Embed (source="/com/cleartext/ximpp/assets/abcSelected.png")]
			[Bindable]
			public var AbcSelected:Class;
			
			[Embed (source="/com/cleartext/ximpp/assets/statusUp.png")]
			[Bindable]
			public var StatusUp:Class;
			
			[Embed (source="/com/cleartext/ximpp/assets/statusSelected.png")]
			[Bindable]
			public var StatusSelected:Class;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				// STATUS PANEL

				var g:Graphics = statusCanvas.graphics;
				var w:Number = statusCanvas.width-1;
				var h:Number = statusCanvas.height;
				
				g.clear();

				var m:Matrix = new Matrix();
				m.createGradientBox(w, h, Math.PI/2, 0, 0);
				g.beginGradientFill(GradientType.LINEAR, [0x9b9b9b, 0xf3f3f3], [1, 1], [0x00, 0xFF], m);  
				g.drawRect(0, 0, w, h);
				
				g.beginFill(0x909090);
				g.drawRect(0,0,w,Constants.TOP_ROW_HEIGHT/2);
				g.endFill();
				
				g.lineStyle(1, 0xffffff);
				g.drawRect(0,0,w,h);
				
				g.lineStyle(1, 0xc1c1c1);
				g.moveTo(0,h);
				g.lineTo(w,h);

				// FILTER PANEL

				g = filterCanvas.graphics;
				w = filterCanvas.width;
				h = filterCanvas.height;
				
				g.clear();

				m = new Matrix();
				m.createGradientBox(w, h, Math.PI/2, 0, 0);
				g.beginGradientFill(GradientType.LINEAR, [0xa1a4a7, 0x4f5051], [1, 1], [0x00, 0xFF], m);  
				g.drawRect(0, 0, w, h);
				
				g.beginFill(0x292a2a);
				g.drawRect(0,0,w,1);
				
				g.beginFill(0x47484a);
				g.drawRect(0,1,w,1);
				
				g.endFill();
				g.lineStyle(1, 0x848688);
				g.moveTo(0,h);
				g.lineTo(0,2);
				g.lineTo(w-1,2);
				g.lineTo(w-1,h);
			}
			
			private function itemDoubleClicked(event:SproutListEvent):void
			{
				appModel.getChat(event.data as Buddy, true);
			}

			private function userPresenceChangeHandler():void
			{
				appModel.setUserPresence(statusComboBox.selectedLabel, customStatusInput.text);
			}
			
			private function init():void
			{
				settings.addEventListener(UserAccountEvent.CHANGED, userAccountChanged);
				userAccountChanged(null);
			}
			
			private function userAccountChanged(event:UserAccountEvent):void
			{
				avatar.data = settings.userAccount;
			}
			
		]]>
	</mx:Script>

	<mx:Canvas id="statusCanvas" 
		width="100%" height="{Constants.TOP_BAR_HEIGHT}"
		clipContent="false">

		<mx:Label
			y="5" x="5" 
			text="Status" 
			color="0xffffff" 
			fontWeight="bold"/>

		<common:StatusIcon
			statusString="{appModel.serverSideStatus.value}"
			right="135" y="5"
			scaleX="1.2" scaleY="1.2"
			/>
		
		<mx:ComboBox
			id="statusComboBox"
			dataProvider="{Status.USER_TYPES}"
			selectedIndex="{Status.USER_TYPES.indexOf(appModel.localStatus.value)}"
			change="userPresenceChangeHandler()"
			right="5" y="3" width="110"
			text="{appModel.serverSideStatus.value}"
			creationComplete="statusComboBox.text=appModel.serverSideStatus.value"
			alpha="0.9"
			/>
			
		<common:DefaultTextInput
			id="customStatusInput"
			valueCommit="userPresenceChangeHandler()"
			defaultText="custom status..."
			keyDown="if(event.keyCode==Keyboard.ENTER) userPresenceChangeHandler()"
			top="29" height="33"
			right="5" left="15"
			text="{settings.userAccount.customStatus}"
			borderStyle="none"
			backgroundAlpha="0"
			focusAlpha="0.5"
			/>
		
		<mx:CheckBox
			id="bloggingCheckBox"
			bottom="5" right="5"
			labelPlacement="right"
			label="send status to micro-blogging networks?"
			 fontSize="9.5" borderColor="#DFE0E1" color="#B0B0B0" cornerRadius="4"/>

		<common:Avatar
			id="avatar"
			width="48"
			height="48"
			x="-40" y="27"
			border="false">
			<common:filters>
				<mx:DropShadowFilter distance="0" blurX="4" blurY="4" />
			</common:filters>
		</common:Avatar>

	</mx:Canvas>
	
	<mx:Canvas id="filterCanvas"
		width="100%"
		height="{Constants.AVATAR_TAB_HEIGHT}">
		
		<mx:Label styleName="whiteBoldBig" x="14" y="11" text="{buddies.groupName}" />
		
		<common:SearchBox width="{filterCanvas.width - 113}" height="24" x="8" y="32" search="buddies.searchString = event.searchString"/>
		
		<mx:Button
			right="64" y="32"
			skin="{null}"
			upSkin="{TimeUp}"
			downSkin="{TimeUp}"
			overSkin="{TimeUp}"
			disabledSkin="{TimeSelected}"
			enabled="{buddies.sortType != BuddySortTypes.LAST_SEEN}"
			click="buddies.sortType = BuddySortTypes.LAST_SEEN"
			buttonMode="true"
			toolTip="sort by last seen"
			/>
		<mx:Button
			right="36" y="32"
			skin="{null}"
			upSkin="{StatusUp}"
			downSkin="{StatusUp}"
			overSkin="{StatusUp}"
			disabledSkin="{StatusSelected}"
			enabled="{buddies.sortType != BuddySortTypes.STATUS}"
			click="buddies.sortType = BuddySortTypes.STATUS"
			buttonMode="true"
			toolTip="sort by status"
			/>
		<mx:Button
			right="9" y="32"
			skin="{null}"
			upSkin="{AbcUp}"
			downSkin="{AbcUp}"
			overSkin="{AbcUp}"
			disabledSkin="{AbcSelected}"
			enabled="{buddies.sortType != BuddySortTypes.ALPHABETICAL}"
			click="buddies.sortType = BuddySortTypes.ALPHABETICAL"
			buttonMode="true"
			toolTip="sort alphabetically"
			/>
	</mx:Canvas>

	<buddies:BuddySproutList
		id="buddyList" 
		horizontalScrollPolicy="off"
		doubleClickEnabled="true"
		itemDoubleClicked="itemDoubleClicked(event)"
		dataProvider="{buddies.buddies}"
		height="100%" width="100%"
		itemRenderer="{new ClassFactory(BuddyRenderer)}"
		editBuddy="Swiz.dispatchEvent(new PopUpEvent(PopUpEvent.EDIT_BUDDY_WINDOW,'',(event.target.data as Buddy)))">
	</buddies:BuddySproutList>

	<mx:Canvas>
		<mx:Button x="20" label="add buddy" click="Swiz.dispatchEvent(new PopUpEvent(PopUpEvent.ADD_NEW_BUDDY_WINDOW))"/>
	</mx:Canvas>
</mx:VBox>
