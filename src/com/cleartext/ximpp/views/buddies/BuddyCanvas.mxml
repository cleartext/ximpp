<?xml version="1.0" encoding="utf-8"?>
<mx:VBox 
	clipContent="false"
	creationComplete="userAccountChanged(null)"
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:buddies="com.cleartext.ximpp.views.buddies.*"
	width="100%" height="100%"
	xmlns:common="com.cleartext.ximpp.views.common.*" 
	verticalGap="0" 
	xmlns:list="com.universalsprout.flex.components.list.*"
	>
	<mx:Script>
		<![CDATA[
			import com.cleartext.ximpp.events.InputTextEvent;
			import com.cleartext.ximpp.events.BuddyEvent;
			import com.cleartext.ximpp.models.DatabaseModel;
			import com.cleartext.ximpp.models.XMPPModel;
			import com.cleartext.ximpp.events.CustomStatusEvent;
			import com.cleartext.ximpp.models.types.BuddySortTypes;
			import com.cleartext.ximpp.models.BuddyModel;
			import com.cleartext.ximpp.events.UserAccountEvent;
			import com.cleartext.ximpp.models.SettingsModel;
			import com.cleartext.ximpp.assets.Constants;
			import com.cleartext.ximpp.models.valueObjects.Status;
			import com.cleartext.ximpp.events.PopUpEvent;
			import org.swizframework.Swiz;
			import mx.controls.Alert;
			import com.cleartext.ximpp.models.valueObjects.Buddy;
			import com.universalsprout.flex.components.list.SproutListEvent;
			import com.hurlant.crypto.symmetric.NullPad;
			import com.cleartext.ximpp.models.ApplicationModel;
			
			[Autowire]
			[Bindable]
			public var appModel:ApplicationModel;
			
			[Autowire]
			[Bindable]
			public var settings:SettingsModel;
			
			[Autowire]
			[Bindable]
			public var buddies:BuddyModel;
			
			[Autowire]
			[Bindable]
			public var xmppModel:XMPPModel;
			
			[Autowire]
			[Bindable]
			public var database:DatabaseModel;
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				// STATUS PANEL

				var g:Graphics = statusCanvas.graphics;
				var w:Number = statusCanvas.width-1;
				var h:Number = statusCanvas.height;
				
				g.clear();

				var m:Matrix = new Matrix();
				m.createGradientBox(w, h, Math.PI/2, 0, 0);
				g.beginGradientFill(GradientType.LINEAR, [0x9b9b9b, 0xf3f3f3], [1, 1], [0x00, 0xFF], m);  
				g.drawRect(0, 0, w, h);
				
				g.beginFill(0x909090);
				g.drawRect(0,0,w,Constants.TOP_ROW_HEIGHT/2);
				g.endFill();
				
				g.lineStyle(1, 0xffffff);
				g.drawRect(0,0,w,h);
				
				g.lineStyle(1, 0xc1c1c1);
				g.moveTo(0,h);
				g.lineTo(w,h);

				// FILTER PANEL

				g = filterCanvas.graphics;
				w = filterCanvas.width;
				h = filterCanvas.height;
				
				g.clear();

				m = new Matrix();
				m.createGradientBox(w, h, Math.PI/2, 0, 0);
				g.beginGradientFill(GradientType.LINEAR, [0xa1a4a7, 0x4f5051], [1, 1], [0x00, 0xFF], m);  
				g.drawRect(0, 0, w, h);
				
				g.beginFill(0x292a2a);
				g.drawRect(0,0,w,1);
				
				g.beginFill(0x47484a);
				g.drawRect(0,1,w,1);
				
				g.endFill();
				g.lineStyle(1, 0x848688);
				g.moveTo(0,h);
				g.lineTo(0,2);
				g.lineTo(w-1,2);
				g.lineTo(w-1,h);
			}
			
			private function userPresenceChangeHandler():void
			{
				appModel.setUserPresence(statusComboBox.selectedLabel, customStatusInput.text);
				// reset the list so there is no item selected in the list
				statusComboBox.selectedItem = null;
				// make sure the label is displaying the current status
				// (it will want to display the value just selected)
				statusComboBox.text = appModel.serverSideStatus.value;
				
				if(xmppModel.connected && microBloggingCheckBox.selected && customStatusInput.text != "")
				{
					appModel.getChat(Buddy.ALL_MICRO_BLOGGING_BUDDY);
					Swiz.dispatchEvent(new InputTextEvent(InputTextEvent.INSERT_TEXT, customStatusInput.text));
				}
			}
			
			[Mediate (event="UserAccountEvent.REFRESH")]
			public function userAccountChanged(event:UserAccountEvent):void
			{
				avatar.data = settings.userAccount;
			}
			
		]]>
	</mx:Script>

	<mx:Canvas id="statusCanvas" 
		width="100%" height="{Constants.TOP_BAR_HEIGHT}"
		clipContent="false">

		<mx:Label
			y="5" x="5" 
			text="Status" 
			color="0xffffff" 
			fontWeight="bold"/>

		<common:StatusIcon
			statusString="{appModel.serverSideStatus.value}"
			right="135" y="5"
			scaleX="1.2" scaleY="1.2"
			/>
		
		<mx:ComboBox
			id="statusComboBox"
			dataProvider="{Status.USER_TYPES}"
			change="userPresenceChangeHandler()"
			right="5" y="3" width="110"
			text="{appModel.serverSideStatus.value}"
			alpha="0.9"
			/>
			
		<common:DefaultTextInput
			id="customStatusInput"
			enabled="{xmppModel.connected}"
			valueCommit="userPresenceChangeHandler()"
			defaultText="custom status..."
			keyDown="if(event.keyCode==Keyboard.ENTER) userPresenceChangeHandler()"
			top="29" height="33"
			right="5" left="15"
			text="{settings.userAccount.customStatus}"
			borderStyle="none"
			backgroundAlpha="0"
			focusAlpha="0.5"
			/>
		
		<mx:CheckBox
			id="microBloggingCheckBox"
			bottom="5" right="5"
			labelPlacement="right"
			label="send status to micro-blogging networks?"
			fontSize="9.5"
			borderColor="#DFE0E1"
			color="#B0B0B0"
			cornerRadius="4"
			selected="{settings.global.sendStatusToMicroBlogging}"
			click="settings.global.sendStatusToMicroBlogging = microBloggingCheckBox.selected; database.saveGlobalSettings()"
			/>

		<common:Avatar
			id="avatar"
			width="48"
			height="48"
			x="-40" y="30"
			border="false">
			<common:filters>
				<mx:DropShadowFilter distance="0" blurX="4" blurY="4" />
			</common:filters>
		</common:Avatar>

	</mx:Canvas>
	
	<mx:Canvas id="filterCanvas"
		width="100%"
		height="{Constants.AVATAR_TAB_HEIGHT}">
		
		<mx:Label styleName="whiteBoldBig" x="14" y="11" text="{buddies.groupName}" />
		
		<common:SearchBox width="{filterCanvas.width - 113}" height="24" x="8" y="32" search="buddies.searchString = event.searchString"/>
		
		<mx:Button
			right="75" y="32"
			skin="{null}"
			upSkin="{Constants.TimeUp}"
			downSkin="{Constants.TimeUp}"
			overSkin="{Constants.TimeUp}"
			disabledSkin="{Constants.TimeSelected}"
			enabled="{settings.global.buddySortMethod != BuddySortTypes.LAST_SEEN}"
			click="buddies.sortType = BuddySortTypes.LAST_SEEN"
			buttonMode="true"
			toolTip="sort by last seen"
			/>
		<mx:Button
			right="52" y="32"
			skin="{null}"
			upSkin="{Constants.StatusUp}"
			downSkin="{Constants.StatusUp}"
			overSkin="{Constants.StatusUp}"
			disabledSkin="{Constants.StatusSelected}"
			enabled="{settings.global.buddySortMethod != BuddySortTypes.STATUS}"
			click="buddies.sortType = BuddySortTypes.STATUS"
			buttonMode="true"
			toolTip="sort by status"
			/>
		<mx:Button
			right="29" y="32"
			skin="{null}"
			upSkin="{Constants.UnreadUp}"
			downSkin="{Constants.UnreadUp}"
			overSkin="{Constants.UnreadUp}"
			disabledSkin="{Constants.UnreadSelected}"
			enabled="{settings.global.buddySortMethod != BuddySortTypes.UNREAD_MESSAGES}"
			click="buddies.sortType = BuddySortTypes.UNREAD_MESSAGES"
			buttonMode="true"
			toolTip="sort by un-read messages"
			/>
		<mx:Button
			right="5" y="32"
			skin="{null}"
			upSkin="{Constants.AbcUp}"
			downSkin="{Constants.AbcUp}"
			overSkin="{Constants.AbcUp}"
			disabledSkin="{Constants.AbcSelected}"
			enabled="{settings.global.buddySortMethod != BuddySortTypes.ALPHABETICAL}"
			click="buddies.sortType = BuddySortTypes.ALPHABETICAL"
			buttonMode="true"
			toolTip="sort alphabetically"
			/>
	</mx:Canvas>

	<buddies:BuddySproutList
		id="buddyList" 
		virtualList="false"
		animate="{settings.global.animateBuddyList}"
		horizontalScrollPolicy="off"
		dataProvider="{buddies.buddies}"
		height="100%" width="100%"
		itemRenderer="{new ClassFactory(BuddyRenderer)}">
	</buddies:BuddySproutList>
</mx:VBox>
