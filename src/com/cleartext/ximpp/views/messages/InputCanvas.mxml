<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:common="com.cleartext.ximpp.views.common.*"
	clipContent="false">
	<mx:Script>
		<![CDATA[
			import com.cleartext.ximpp.events.SendButtonEvent;
			import com.cleartext.ximpp.events.CustomStatusEvent;
			import com.cleartext.ximpp.models.Constants;
			import com.cleartext.ximpp.models.valueObjects.Status;
			import com.cleartext.ximpp.models.valueObjects.Message;
			import com.cleartext.ximpp.models.XMPPModel;
			import com.cleartext.ximpp.models.valueObjects.Buddy;
			
			public var messageCanvas:MessageCanvas;
			
			private static const CORNER_RADIUS:Number = 5;
			
			[Bindable]
			public var buddy:Buddy;
			
			[Autowire]
			[Bindable]
			public var xmpp:XMPPModel;
			
			private function input_keyDownHandler(event:KeyboardEvent):void
			{
				if(event.keyCode==Keyboard.ENTER)
				{
					// if some muppet decides to carry on pressing the enter key
					// they will start sending blank messages, the inputTextArea.text
					// length will be 0 becaues the enter hasn't yet been appended to
					// the text. Use call later to allow the enter to be appended, then
					// force a reset.
					if(inputTextArea.text.length == 0)
						callLater(inputTextArea.reset, [true, false]);
					else
						send();
				}
			}
			
			[Mediate(event="SendButtonEvent.SEND_CLICKED")]
			public function send_clickHandler(event:SendButtonEvent):void
			{
				inputTextArea.setFocus();
				send();
			}
			
			private function send():void
			{
				if(inputTextArea.text.length != 0)
				{
					messageCanvas.sendMessage(inputTextArea.text);
					callLater(inputTextArea.reset, [true, false]);
				}
			}
			
			[Mediate(event="CustomStatusEvent.CUSTOM_STATUS_CHANGE")]
			public function setInputField(event:CustomStatusEvent):void
			{
				inputTextArea.text = event.customStatus;

				if(inputTextArea.enabled)
					inputTextArea.setFocus();
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				var g:Graphics = graphics;
				
				g.clear();
				
				g.beginFill(0xffffff);
				g.drawRoundRect(0, 0, unscaledWidth, unscaledHeight, CORNER_RADIUS, CORNER_RADIUS);
				
				g.beginFill(0xebebeb);
				g.drawRoundRect(0, 0, unscaledWidth, Constants.TOP_ROW_HEIGHT, CORNER_RADIUS, CORNER_RADIUS);
				
				g.beginFill(0xffffff);
				g.drawRect(0, Constants.TOP_ROW_HEIGHT/2, unscaledWidth, Constants.TOP_ROW_HEIGHT/2);
				
				g.endFill();

				g.lineStyle(1, 0xefebe8);
				g.moveTo(0, Constants.TOP_ROW_HEIGHT);
				g.lineTo(unscaledWidth, Constants.TOP_ROW_HEIGHT);
				
				g.lineStyle(1, 0xffffff);
				g.drawRoundRect(0, 0, unscaledWidth, unscaledHeight, CORNER_RADIUS, CORNER_RADIUS);
			}
			
		]]>
	</mx:Script>
	
	<mx:Label text="{'Conversation with ' + buddy.nickName}" x="10" y="6" />

	<mx:Label text="{inputTextArea.text.length + ' Characters'}" right="10" y="6" />

	<common:DefaultTextInput
		id="inputTextArea"
		defaultText="type message here..."
		width="100%" bottom="0" top="{Constants.TOP_ROW_HEIGHT}" 
		keyDown="input_keyDownHandler(event)"
		enabled="{!(!buddy || !xmpp.connected)}"
		focusRoundedCorners="bl br" 
		cornerRadius="{CORNER_RADIUS}"
		paddingRight="20"
		paddingLeft="10"
		paddingBottom="3"
		paddingTop="3"
		verticalScrollPolicy="off"
		horizontalScrollPolicy="off"
		backgroundAlpha="0"
		wordWrap="true"
		borderStyle="none"
		focusAlpha="0.5" />

</mx:Canvas>
